// This file is auto generated by icy-vector
#include "icydb.h"
typedef struct _windows{
  char ** column_names;
  char ** column_types;
  size_t * count;
  size_t * capacity;
  size_t * free_index_count;
  const size_t column_count;
  icy_mem * free_indexes;
  icy_mem * header;
  const size_t column_sizes[1];
  
  u64 * id;
  icy_mem * id_area;
}windows;

// a vector index.
typedef struct{
  size_t index;
}windows_index;

typedef struct{
  size_t index;
  size_t count;
}windows_indexes;

windows * windows_create(const char * optional_name);
windows_index windows_alloc(windows * table);
windows_indexes windows_alloc_sequence(windows * table, size_t count);
void windows_remove(windows * table, windows_index index);
void windows_remove_sequence(windows * table, windows_indexes * indexes);
void windows_clear(windows * table);
void windows_optimize(windows * table);
void windows_destroy(windows ** table);
